{
  "_args": [
    [
      {
        "raw": "gulp-sort@^2.0.0",
        "scope": null,
        "escapedName": "gulp-sort",
        "name": "gulp-sort",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/equinox/code/mani-home-specs"
    ]
  ],
  "_from": "gulp-sort@>=2.0.0 <3.0.0",
  "_id": "gulp-sort@2.0.0",
  "_inCache": true,
  "_location": "/gulp-sort",
  "_nodeVersion": "5.5.0",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/gulp-sort-2.0.0.tgz_1455533389741_0.5248277480714023"
  },
  "_npmUser": {
    "name": "pgilad",
    "email": "giladp007@gmail.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-sort@^2.0.0",
    "scope": null,
    "escapedName": "gulp-sort",
    "name": "gulp-sort",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-sort/-/gulp-sort-2.0.0.tgz",
  "_shasum": "c6762a2f1f0de0a3fc595a21599d3fac8dba1aca",
  "_shrinkwrap": null,
  "_spec": "gulp-sort@^2.0.0",
  "_where": "/home/equinox/code/mani-home-specs",
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com",
    "url": "http://giladpeleg.com"
  },
  "bugs": {
    "url": "https://github.com/pgilad/gulp-sort/issues"
  },
  "dependencies": {
    "through2": "^2.0.1"
  },
  "description": "Sort files in stream by path or any custom sort comparator",
  "devDependencies": {
    "gulp-util": "^3.0.4",
    "mocha": "^2.1.0",
    "stable": "^0.1.5"
  },
  "directories": {},
  "dist": {
    "shasum": "c6762a2f1f0de0a3fc595a21599d3fac8dba1aca",
    "tarball": "https://registry.npmjs.org/gulp-sort/-/gulp-sort-2.0.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "720d3efaec97ebfbd11d67540c684e5a916e4262",
  "homepage": "https://github.com/pgilad/gulp-sort#readme",
  "keywords": [
    "gulpplugin",
    "gulp",
    "sort",
    "paths",
    "order",
    "comparator"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "pgilad",
      "email": "giladp007@gmail.com"
    }
  ],
  "name": "gulp-sort",
  "optionalDependencies": {},
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-sort\n> Sort files in stream by path or any custom sort comparator\n\n[![Build Status](http://img.shields.io/travis/pgilad/gulp-sort/master.svg?style=flat)](https://travis-ci.org/pgilad/gulp-sort)\n\n## Install\n\n`$ npm install gulp-sort --save-dev`\n\n## Usage\n\n```js\nvar sort = require('gulp-sort');\n\n// default sort\ngulp.src('./src/js/**/*.js')\n    .pipe(sort())\n    .pipe(gulp.dest('./build/js'));\n\n// pass in a custom comparator function\ngulp.src('./src/js/**/*.js')\n    .pipe(sort(customComparator))\n    .pipe(gulp.dest('./build/js'));\n\n// sort descending\ngulp.src('./src/js/**/*.js')\n    .pipe(sort({\n         asc: false\n    }))\n    .pipe(gulp.dest('./build/js'));\n\n// sort with a custom comparator\ngulp.src('./src/js/**/*.js')\n    .pipe(sort({\n        comparator: function(file1, file2) {\n            if (file1.path.indexOf('build') > -1) {\n                return 1;\n            }\n            if (file2.path.indexOf('build') > -1) {\n                return -1;\n            }\n            return 0;\n        }\n    }))\n    .pipe(gulp.dest('./build/js'));\n\n// sort with a custom sort function\nvar stable = require('stable');\ngulp.src('./src/js/**/*.js')\n    .pipe(sort({\n        customSortFn: function(files, comparator) {\n            return stable(files, comparator);\n        }\n    }))\n    .pipe(gulp.dest('./build/js'));\n```\n\n## Options\n\n`gulp-sort` takes in an optional [comparator](#comparator) function, or dictionary with following params:\n\n### asc\n\nSort ascending. Defaults to true. Specify false to sort descending.\n\n### comparator\n\nComparator function to use. `comparator(file1, file2)`. Defaults to `localeCompare` of file paths.\n\n### customSortFn\n\nUse `customSortFn` in order to control the sorting yourself (useful for stable sorts).\n\n`customSortFn` signature is as follows:\n\n`customSortFn(<files>, <comparator>)`\n\n- `files` being the vinyl file objects that were passed in\n- `comparator` is the default comparator used, or a custom one that was passed as param\n\nThis function is expected to return back the sorted list of files.\n\n## License\n\nMIT Â©[Gilad Peleg](http://giladpeleg.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pgilad/gulp-sort.git"
  },
  "scripts": {
    "test": "mocha tests/*.js"
  },
  "version": "2.0.0"
}
