{
  "_args": [
    [
      {
        "raw": "esf-puml@^0.6.4",
        "scope": null,
        "escapedName": "esf-puml",
        "name": "esf-puml",
        "rawSpec": "^0.6.4",
        "spec": ">=0.6.4 <0.7.0",
        "type": "range"
      },
      "/home/equinox/code/mani-home-specs/node_modules/gulp-puml"
    ]
  ],
  "_from": "esf-puml@>=0.6.4 <0.7.0",
  "_id": "esf-puml@0.6.4",
  "_inCache": true,
  "_location": "/esf-puml",
  "_nodeVersion": "6.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/esf-puml-0.6.4.tgz_1474004541271_0.7325538687873632"
  },
  "_npmUser": {
    "name": "bond007",
    "email": "bond.den@gmail.com"
  },
  "_npmVersion": "3.10.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "esf-puml@^0.6.4",
    "scope": null,
    "escapedName": "esf-puml",
    "name": "esf-puml",
    "rawSpec": "^0.6.4",
    "spec": ">=0.6.4 <0.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp-puml"
  ],
  "_resolved": "https://registry.npmjs.org/esf-puml/-/esf-puml-0.6.4.tgz",
  "_shasum": "57d68f37dbd2c947b4a1aae6a33d859ef59934c3",
  "_shrinkwrap": null,
  "_spec": "esf-puml@^0.6.4",
  "_where": "/home/equinox/code/mani-home-specs/node_modules/gulp-puml",
  "author": {
    "name": "Denis Bondarenko",
    "email": "bond.den@gmail.com"
  },
  "bin": {
    "COPYING": "bin/COPYING",
    "plantuml.jar": "bin/plantuml.jar"
  },
  "bugs": {
    "url": "https://github.com/bondden/esf-puml/issues"
  },
  "dependencies": {
    "babel-polyfill": "^6.13.0",
    "fs-extra": "^0.26.7",
    "svgo": "^0.6.6"
  },
  "description": "Renders puml-files from nested directories, a string or a single *.puml file",
  "devDependencies": {
    "babel-core": "^6.14.0",
    "babel-preset-es2015-node6": "^0.3.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-register": "^6.14.0",
    "chai": "^3.5.0",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-changed": "^1.3.2",
    "gulp-eslint": "^1.1.1",
    "gulp-mocha": "^2.2.0",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.6.0",
    "istanbul": "^0.4.5",
    "mocha-lcov-reporter": "^1.2.0"
  },
  "directories": {
    "bin": "./bin"
  },
  "dist": {
    "shasum": "57d68f37dbd2c947b4a1aae6a33d859ef59934c3",
    "tarball": "https://registry.npmjs.org/esf-puml/-/esf-puml-0.6.4.tgz"
  },
  "files": [
    "bin",
    "src",
    "tst",
    ".babelrc",
    ".eslintrc",
    ".editorconfig",
    ".gitattributes",
    ".gitignore",
    ".npmignore",
    "gulpfile.babel.js"
  ],
  "gitHead": "f8325ef4bf93fb97477029c30833f9501ebf319f",
  "homepage": "https://github.com/bondden/esf-puml",
  "keywords": [
    "PlantUML",
    "dot",
    "uml",
    "esf"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bond007",
      "email": "bond.den@gmail.com"
    }
  ],
  "name": "esf-puml",
  "optionalDependencies": {},
  "readme": "# PlantUML Renderer\n[![Code Climate](https://codeclimate.com/github/bondden/esf-puml/badges/gpa.svg)](https://codeclimate.com/github/bondden/esf-puml)\n\nA Node.Js module for converting [PlantUML](http://plantuml.com) files to graphics formats: SVG, PNG, EPS.\n\n## System Requirements\n1. [Graphviz](http://www.graphviz.org/) installed.\n2. Path to Grapviz Dot executable directory registered in system PATH.\n\n## Installation\n\n```bash\nnpm i esf-puml\n```\n\n## Running unit tests locally\nEnsure `tst/d/out` is writable, or redefine it in `tst/index.js`.` Then run:\n\n```bash\nesf-puml> npm i -D\nesf-puml> gulp test\n```\n\n## PlantUML Credits\nThe module includes the MIT licensed version, available from [MIT licensed PlantUML download](http://plantuml.com/download.html#mit).\n\n## Road map\n\nVersion | Functionality                                                   | Status\n------- | --------------------------------------------------------------- | --------\n0.1.0   | Recursive directory rendering (req. [esf-puml-2](esf-puml-2))   | released\n0.2.0   | Single file rendering (req. [esf-puml-4](esf-puml-4))           | released\n0.3.0   | String input rendering (req. [esf-puml-2](esf-puml-2))          | released\n0.4.0   | Stream rendering to svg (partial req. [esf-puml-5](esf-puml-5)) | released\n0.5.0   | String to string (req. [esf-puml-7](esf-puml-7))                | released\n1.0.0   | API v.1.0 implementation (req. [esf-puml-6](esf-puml-6))        |\n1.1.0   | API v.1.1 implementation (req. [esf-puml-8](esf-puml-8))        | -\n\n## Requirements\n### esf-puml-1\n\nReqId        | Requirement                                                                                             | Implementation Methods\n------------ | ------------------------------------------------------------------------------------------------------- | ----------------------\nesf-puml-1   | There should be an option to chose a result format: <ul><li>`png`</li><li>`svg`</li><li>`eps`</li></ul> |\nesf-puml-2   | Rendering PUML-files from a directory recursively                                                       | `renderDir`\nesf-puml-2.1 | It should gather puml-files from nested directories recursively and create the same temporary structure |\nesf-puml-2.2 | It should render all the files                                                                          |\nesf-puml-2.3 | It should delete puml-sources                                                                           |\nesf-puml-2.4 | It should move the result to the `out` directory                                                        |\nesf-puml-3   | Rendering a string input                                                                                | `renderString`\nesf-puml-3.1 | It should accept puml-string as input                                                                   |\nesf-puml-3.2 | It should save an output file at a specified path                                                       |\nesf-puml-4   | Rendering a single file                                                                                 | `renderFile`\nesf-puml-4.1 | It should gather puml-files from nested directories recursively at `inp` as a root                      |\nesf-puml-4.2 | It should write the result in chosen format to Writable stream                                          |\nesf-puml-5   | Process a stream                                                                                        | `stream`\nesf-puml-5.1 | It should read a stream                                                                                 |\nesf-puml-5.2 | It should return a Readable stream                                                                      |\nesf-puml-6   | It should implement API v.1.0                                                                           | \nesf-puml-7   | Rendering a string input to string output                                                               | `renderStringToString`\nesf-puml-7.1 | It should accept puml-string as input                                                                   |\nesf-puml-7.2 | It should return an svg image                                                                           |\nesf-puml-8   | It should automatically detect source and provide an according method, API 1.1 imlementation            | `render`\n\n## API\n### v.1.1\n\n```javascript\nPromise         render                ([string inpDir|inpFile], string outDir=null  [,format='svg'])  //\nPromise         renderDir             (string inpDir,           string outDir,      [,format='svg'])  //\nPromise         renderFile            (string inpFilePath,      string outDir       [,format='svg'])  //\nPromise         renderString          (string pumlString,       string outFilePath  [,format='svg'])  //\nPromise         renderStringToString  (string pumlString,       [,string format='svg'])               //\nstream.Duplex   stream                ([format='svg']           [,string cwd=null])                   // custom Cwd\n```\n\n### v.1.0\n\n```javascript\nPromise         renderDir             (string inpDir,       string outDir,      [,format='svg'])  //\nPromise         renderFile            (string inpFilePath,  string outDir       [,format='svg'])  //\nPromise         renderString          (string pumlString,   string outFilePath  [,format='svg'])  //\nPromise         renderStringToString  (string pumlString,   [,format='svg'])                      //\nstream.Duplex   stream                ([,format='svg']      [,cwd=null])                          // custom Cwd\n```\n\n--------------------------------------------------------------------------------\n\nMIT Â© [bondden](https://github.com/bondden) 2015\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bondden/esf-puml.git"
  },
  "scripts": {
    "test": "npm i -D; gulp tst"
  },
  "version": "0.6.4"
}
